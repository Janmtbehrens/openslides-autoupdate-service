name: CI - Build and Test Service

on: [pull_request]
jobs:
  branch-test:
    runs-on: ubuntu:latest
    name: Tests
    steps:
      - uses: Janmtbehrens/OpenSlides/dev/actions/branch-regex@reusable-github-actions
        with:
          regex: reusable-github-*
        id: regex_match

      - name: Test branch
        if: startsWith('${{ steps.regex_match.outputs.match}}', 'reusable-github-*')
        run: echo "Branch worked"

      - name: Checks
        run: |
          echo "${{ steps.regex_match.outputs.match }}"
          echo "${{ inputs.branches }}"
          

  continuous-tests:
    name: Continuous Tests
    runs-on: ubuntu-latest
    steps:
    # https://stackoverflow.com/questions/58033366/how-to-get-the-current-branch-within-github-actions
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Test branch
        if: startsWith('${{ steps.extract_branch.outputs.branch}}', '${{ inputs.branches }}')
        run: echo "Branch worked"

      - name: Checks
        run: |
          echo "${{ steps.extract_branch.outputs.branch}}"
          echo "${{ inputs.branches }}"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: go fmt
        run: test -z $(gofmt -l .)

      - name: go vet
        run: go vet ./...

      - name: golint
        run: go install golang.org/x/lint/golint@latest && golint -set_exit_status ./...

      - name: test
        run: go test -timeout 30s -race ./...

  # This setups and runs the dev/run-tests.sh script
  run-test-script:
    name: Run-tests.sh Script
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Test
        uses: Janmtbehrens/OpenSlides/dev/actions/build-and-test-service@all-in-one
        with:
          service: autoupdate

  readme-validation:
    # This Job confirms the validity and functionality of all functions presented in the README.md file
    name: Readme Validation
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

      postgres:
        image: postgres
        env:
          POSTGRES_USER: openslides
          POSTGRES_PASSWORD: password
          POSTGRES_DB: openslides
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
        id: go

      - name: Check out code
        uses: actions/checkout@v4

      - name: create secrets
        run: |
          mkdir secrets
          printf "password" > secrets/postgres_password
          printf "my_token_key" > secrets/auth_token_key
          printf "my_cookie_key" > secrets/auth_cookie_key

      - name: Start With golang
        run: |
          go build
          export DATABASE_PASSWORD_FILE=secrets/postgres_password
          export AUTH_TOKEN_KEY_FILE=secrets/auth_token_key
          export AUTH_COOKIE_KEY_FILE=secrets/auth_cookie_key
          timeout --preserve-status --signal=SIGINT 2s ./openslides-autoupdate-service

      - name: Build Prod
        uses: Janmtbehrens/OpenSlides/dev/actions/build-service@all-in-one
        with:
          service: autoupdate
          context: prod

      - name: Start With Docker
        run: |
          timeout --preserve-status --signal=SIGINT 5s docker run --network host -v $PWD/secrets:/run/secrets openslides-autoupdate
        env:
          DOCKER_BUILDKIT: 1

      - name: Build Dev
        uses: Janmtbehrens/OpenSlides/dev/actions/build-service@all-in-one
        with:
          service: autoupdate
          context: dev

      - name: Start With Auto Restart
        run: |
          timeout --preserve-status --signal=SIGINT 5s docker run --network host --env OPENSLIDES_DEVELOPMENT=true openslides-autoupdate-dev
        env:
          DOCKER_BUILDKIT: 1